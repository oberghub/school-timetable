generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider              = "prisma-dbml-generator"
  includeRelationFields = false
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Define the database schema

model class_schedule {
  ClassID     Int         @id @default(autoincrement())
  DayOfWeek   day_of_week
  TimeslotID  String
  SubjectCode String
  RoomID      Int?
  GradeID     String

  room       room?      @relation(fields: [RoomID], references: [RoomID], onDelete: Cascade, onUpdate: Cascade)
  gradelevel gradelevel @relation(fields: [GradeID], references: [GradeID], onDelete: Cascade, onUpdate: Cascade)
  subject    subject    @relation(fields: [SubjectCode], references: [SubjectCode], onUpdate: Cascade)
  timeslot   timeslot   @relation(fields: [TimeslotID], references: [TimeslotID], onDelete: Cascade, onUpdate: Cascade)
}

model gradelevel {
  GradeID   String @id
  Year      Int
  Number    Int
  ProgramID Int?

  program                 program?                  @relation(fields: [ProgramID], references: [ProgramID], onDelete: Cascade, onUpdate: Cascade)
  class_schedule          class_schedule[]
  teachers_responsibility teachers_responsibility[]
}

model room {
  RoomID   Int    @id @default(autoincrement())
  RoomName String @unique
  Building String @default("-")
  Floor    String @default("-")

  class_schedule class_schedule[]
}

model subject {
  SubjectCode String         @id
  SubjectName String
  Credit      subject_credit
  Category    String         @default("-")
  ProgramID   Int?

  program                 program?                  @relation(fields: [ProgramID], references: [ProgramID], onDelete: Cascade, onUpdate: Cascade)
  class_schedule          class_schedule[]
  teachers_responsibility teachers_responsibility[]
}

model program {
  ProgramID   Int    @id @default(autoincrement())
  ProgramName String @unique

  subject   subject[]
  gradelevel gradelevel[]
}

model teacher {
  TeacherID  Int    @id @default(autoincrement())
  Prefix     String
  Firstname  String
  Lastname   String
  Department String @default("-")

  teachers_responsibility teachers_responsibility[]
}

model timeslot {
  TimeslotID   String   @id
  AcademicYear Int
  Semester     semester
  StartTime    DateTime @db.Time()
  EndTime      DateTime @db.Time()
  IsBreaktime  Boolean

  class_schedule class_schedule[]
}

model teachers_responsibility {
  TeacherID    Int
  GradeID      String
  SubjectCode  String
  AcademicYear Int
  Semester     semester
  TeachHour    Int

  teacher    teacher    @relation(fields: [TeacherID], references: [TeacherID], onDelete: Cascade, onUpdate: Cascade)
  gradelevel gradelevel @relation(fields: [GradeID], references: [GradeID], onDelete: Cascade, onUpdate: Cascade)
  subject    subject    @relation(fields: [SubjectCode], references: [SubjectCode], onDelete: Cascade, onUpdate: Cascade)

  @@id([TeacherID, GradeID, SubjectCode])
  @@index([GradeID])
  @@index([SubjectCode])
}

enum day_of_week {
  MON
  TUE
  WED
  THU
  FRI
  SAT
  SUN
}

enum subject_credit {
  CREDIT_05
  CREDIT_10
  CREDIT_15
  CREDIT_20
}

enum semester {
  SEMESTER_1
  SEMESTER_2
}
