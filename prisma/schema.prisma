generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider              = "prisma-dbml-generator"
  includeRelationFields = "false"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model class_schedule {
  ClassID     Int        @id @default(autoincrement())
  TimeslotID  String
  SubjectCode String
  RoomID      Int?
  GradeID     String
  gradelevel  gradelevel @relation(fields: [GradeID], references: [GradeID], onDelete: Cascade)
  room        room?      @relation(fields: [RoomID], references: [RoomID], onDelete: Cascade)
  subject     subject    @relation(fields: [SubjectCode], references: [SubjectCode])
  timeslot    timeslot   @relation(fields: [TimeslotID], references: [TimeslotID], onDelete: Cascade)

  @@index([GradeID], map: "class_schedule_GradeID_fkey")
  @@index([RoomID], map: "class_schedule_RoomID_fkey")
  @@index([SubjectCode], map: "class_schedule_SubjectCode_fkey")
  @@index([TimeslotID], map: "class_schedule_TimeslotID_fkey")
}

model gradelevel {
  GradeID                 String                    @id
  Year                    Int
  Number                  Int
  ProgramID               Int?
  class_schedule          class_schedule[]
  program                 program?                  @relation(fields: [ProgramID], references: [ProgramID], onDelete: Cascade)
  teachers_responsibility teachers_responsibility[]

  @@index([ProgramID], map: "gradelevel_ProgramID_fkey")
}

model room {
  RoomID         Int              @id @default(autoincrement())
  RoomName       String           @unique
  Building       String           @default("-")
  Floor          String           @default("-")
  class_schedule class_schedule[]
}

model subject {
  SubjectCode             String                    @id
  SubjectName             String
  Credit                  subject_credit
  Category                String                    @default("-")
  ProgramID               Int?
  class_schedule          class_schedule[]
  program                 program?                  @relation(fields: [ProgramID], references: [ProgramID], onDelete: Cascade)
  teachers_responsibility teachers_responsibility[]

  @@index([ProgramID], map: "subject_ProgramID_fkey")
}

model program {
  ProgramID   Int          @id @default(autoincrement())
  ProgramName String       @unique
  gradelevel  gradelevel[]
  subject     subject[]
}

model teacher {
  TeacherID               Int                       @id @default(autoincrement())
  Prefix                  String
  Firstname               String
  Lastname                String
  Department              String                    @default("-")
  teachers_responsibility teachers_responsibility[]
}

model timeslot {
  TimeslotID     String           @id
  AcademicYear   Int
  Semester       semester
  StartTime      DateTime         @db.Time(0)
  EndTime        DateTime         @db.Time(0)
  Breaktime      breaktime
  DayOfWeek      day_of_week
  class_schedule class_schedule[]
}

model teachers_responsibility {
  TeacherID    Int
  GradeID      String
  SubjectCode  String
  AcademicYear Int
  Semester     semester
  TeachHour    Int
  gradelevel   gradelevel @relation(fields: [GradeID], references: [GradeID], onDelete: Cascade)
  subject      subject    @relation(fields: [SubjectCode], references: [SubjectCode], onDelete: Cascade)
  teacher      teacher    @relation(fields: [TeacherID], references: [TeacherID], onDelete: Cascade)

  @@id([TeacherID, GradeID, SubjectCode])
  @@index([GradeID])
  @@index([SubjectCode])
}

enum day_of_week {
  MON
  TUE
  WED
  THU
  FRI
  SAT
  SUN
}

enum subject_credit {
  CREDIT_05
  CREDIT_10
  CREDIT_15
  CREDIT_20
}

enum semester {
  SEMESTER_1
  SEMESTER_2
}

enum breaktime {
  BREAK_JUNIOR
  BREAK_SENIOR
  NOT_BREAK
}
